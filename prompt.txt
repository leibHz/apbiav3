ola claude, boa tarde, preciso de sua ajuda pra fazer um site de chatbot de ia, é bastante coisa entao vamos la

É o seguinte, o nome do projeto é apbia (assistente de projetos pra bragantec baseado em IA)

O projeto é uma IA dá bragantec, uma feira de ciências do IFSP de Bragança Paulista, ele usa uma IA treinada pra melhor cohecimento da bragantec, seu treinamento é os arquivos txt que ela usatra de contexto ja que ela é multimodal, os txt são cadernos de resumos da bragantec das edições anteriores, ele usa a sua API gemini, usando a supabase pra armazenar o banco de dados

A API Key do Google ai studio é: AIzaSyBhxdu9iXVPLZpQhen32l74nP2L_gm9evI
A API Key da supabase anon key é: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxZ3htZ294aXJ4bXV2b2t6Zmt6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAwMDU5NTgsImV4cCI6MjA3NTU4MTk1OH0.i-obWMeuJ8hFDFZGiH6xEW-nVAwhSA7depCCKCbKdQ0
a api key da supabse secret key é: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxZ3htZ294aXJ4bXV2b2t6Zmt6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MDAwNTk1OCwiZXhwIjoyMDc1NTgxOTU4fQ.BxyoJiplK8I6v-t2NdfLtWC9-iaNYPXGU5sjqq_4udY
A URL da supabase é: https://bqgxmgoxirxmuvokzfkz.supabase.co
a senha do banco de dados do supabase é: gaf11052009**
estou compartilhando apenas com vc isso, confio na sua segurança então estão seguradas, é pra usar elas no codigo caso nessesario

Para os ícones, usaremos o fonte awesome, com sua linha JS sendo: <script src="https://kit.fontawesome.com/cc533e21e1.js" crossorigin="anonymous"></script>

Aí vc escolhe os ícones no modo SVG e somente GRÁTIS, com algumas animações caso queira

a ia pro participante da bragantec é acessada pelo prontuario (o BP) da escola e uma senha, caso nn tenha uma senha, é nessesario criar uma, o banco de dados deve verificar se a pessoa é participante e se não for, deve bloquear o acesso, ela ajuda a definir projetos e planejar eles, alem de ter acesso a algumas ferramentas.

a personalidade da ia deve ser mais humana, não sei se isso é possivel

tera um sistema de login, onde o usuario poe o email senha e bp, mesma coisa pro orientador, mas nn tem como cadastrar pois a bragantec é pressencial, logo os dados do participante é posto pelo adiministrador

O site deve ser de fácil manutenção, com um painel administrativo mostrando as contas cadastradas, o adimin pode tirar a IA do ar manualmente caso queira, e reativar ela depois, assim como o adimin pode adicionar os participantes pelo painel 
os dados do usuário e do admin devem ser persistentes e não devem ser apagados a sair do site

aviso: nn vamos usar RAG, os arquivos txt serão mandados puros pra ia intepretar, o modelo que usarei (gemini 2.5 flash) tem essa capacidade como pode ver na documentação
https://ai.google.dev/gemini-api/docs/document-processing?hl=pt-br 

o gemini 2.5 flash é o sucessor do 1.5 flash como pode ver na documentação, ele é mais avançado e recente, por isso usaremos ele
https://ai.google.dev/gemini-api/docs/models?hl=pt-br

esses modelos suportam pensamento segundo a documentação, vmaos usar isso, o objetivo é ele pensar pra responder perguntas mais complexas, nem que demore pra responder, esse sera o modo PADRÂO da IA.
https://ai.google.dev/gemini-api/docs/thinking?hl=pt-br

O objetivo principal é ajudar os estudantes que vão participar da bragantec, auxiliando, planejando e dando ideias.

sera feito usando php, JS, html, boostrap e python pro backend do banco de dados
pesquise sobre boostrap para atualizar suas informações

no caso do python, devera ser usado o modelo MVC com controller, model, view e dao

o banco de dados esta pronto, enviarei o sql dele, precisamos adaptar esse script pro sql editor da supabase que nn usa o mysql normal, pesquise sobre como fazer essa adaptação

drop database if exists apbia;
create database apbia;
use apbia;
CREATE TABLE IF NOT EXISTS tipos_usuario ( -- se é orientador, estudante e etc...
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS tipos_ia ( 
    id INT AUTO_INCREMENT PRIMARY KEY, -- personalização basica de personalidade da IA pra agradar melhor cada tipo de usuario
    nome VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome_completo VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    senha_hash VARCHAR(255), -- vazio se for visitante
    tipo_usuario_id INT NOT NULL,
    numero_inscricao INT UNIQUE, -- se for participante da bragantec
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- pega a data atual
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (tipo_usuario_id) REFERENCES tipos_usuario(id)
);

CREATE TABLE IF NOT EXISTS projetos ( -- projeto se for participante da bragantec
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    descricao TEXT, -- text pois pode ser uma descrição muito grande
    area_projeto VARCHAR(100) NOT NULL,
    ano_edicao INT NOT NULL, -- se for participar mais de um ano, vai saber
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS chats ( -- historico de chats, ultil se o usuario quiser voltar algo
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    tipo_ia_id INT NOT NULL,
    titulo VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (tipo_ia_id) REFERENCES tipos_ia(id)
);

CREATE TABLE IF NOT EXISTS participantes_projetos ( -- tabela de junção pra assosiar projetos  e participantes
    participante_id INT NOT NULL,
    projeto_id INT NOT NULL,
    PRIMARY KEY (participante_id, projeto_id),
    FOREIGN KEY (participante_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (projeto_id) REFERENCES projetos(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS orientadores_projetos ( -- mesma coisa, assosica os projetos a seus orientadores, não ao participante, pois o participante se participar mais de um ano pode mudar o orientador
    orientador_id INT NOT NULL,
    projeto_id INT NOT NULL,
    PRIMARY KEY (orientador_id, projeto_id),
    FOREIGN KEY (orientador_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (projeto_id) REFERENCES projetos(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS arquivos_chat ( -- é nessesario para o historico de chats, caso o usuario envie arquivos pra ia analisar
    id INT AUTO_INCREMENT PRIMARY KEY,
    chat_id INT NOT NULL,
    nome_arquivo VARCHAR(255) NOT NULL,
    url_arquivo VARCHAR(1024) NOT NULL,
    tipo_arquivo VARCHAR(100),
    tamanho_bytes BIGINT,
    data_upload TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS ferramentas_chat ( -- ferramentas igual o chatgpt e gemini tem, nn é dificil fazer pois a google documenta tudo
    id INT AUTO_INCREMENT PRIMARY KEY,
    chat_id INT NOT NULL,
    nome_ferramenta VARCHAR(100) NOT NULL,
    FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE,
    UNIQUE (chat_id, nome_ferramenta)
);

o banco de dados tem mais coisa do que o projeto nessesita, isso é pro futuro, não esqueça de por eles no supabase tbm

usaremos classes no python para melhor organização junto com POO e MVC
pesquise sobre poo e mvc com dao pra atualizar suas informações

separe os arquivos pra melhor organização os arquivos dao serão todos juntos em um arquivo unico, assim como o model, o view e o controller

faça de forma simples, pra poupar seus recursos e não exceder seu limite de mensagens, mas mantenha aqualidade de sempre

em caso de duvida em alguma coisa, SEMPRE PESQUISE e não invente informações

Oq vc acha, consegue fazer tudo isso
